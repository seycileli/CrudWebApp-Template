package com.springmvc.controller;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.springmvc.models.Product;
import com.springmvc.services.ProductServices;

@Controller
public class ProductController {
	
	@RequestMapping("xproductmain")
	public ModelAndView mainProductionHandler() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("products/productmain");

		return mav;
	}
	
//	@RequestMapping("xdeleteproduct")
//	public ModelAndView productDeleteHandler() {
//		ModelAndView mav = new ModelAndView();
//		mav.setViewName("poducts/productdelete");
//	
//		return mav;
//	}
	
	@RequestMapping("xdeleteproduct")
	public ModelAndView removeProductHandler(@RequestParam("id") int productId) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("products/xdeleteproduct");
		
		int result = ProductServices.deleteProduct(productId);
		
		if (result == 1) { //record deleted if successful
			mav.addObject("resultMessage", "Product successfully deleted");
		} else {
			mav.addObject("resultMessage", "Transaction failed");
			//if failed, will direct to error page
		}
		
		mav.setViewName("products/productdelete"); 
		//will direct back to jsp page whether successful or not

		
		return mav;
	}
	
	@RequestMapping("xproductedit")
	public ModelAndView productEditHandler(@ModelAttribute() Product product) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("/products/productedit");
		
		int result = ProductServices.updateProduct(product);
		
		if (result == 1) {
			System.out.println("Success");
		} else {
			System.out.println("Failed");
		}
		
		return mav;
	}
	
	@RequestMapping("xproductadd")
	public ModelAndView addProductHandler() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("products/productnew");
		
		return mav;
	}
	
	@RequestMapping("xproductshow")
	public ModelAndView showProductHandler(@ModelAttribute() Product product) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("products/productshow");
		
		
		
		
		return mav;
	}
	
	@RequestMapping("xproductview")
	public ModelAndView viewAllProductHandler(@RequestParam("id") int productId) {
		/**
		 * This is our SHOWPRODUCT
		 * similar to Marcial's "xshowProduct" class/ method/ handler
		 * 
		 */
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("products/productview");
		
		Product product = ProductServices.getProductById(productId);
		mav.addObject("product", product);
		
		return mav;
	}
	
	@RequestMapping("xenternewproduct")
	public ModelAndView enterNewProductHandler(@ModelAttribute() Product product) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("products/enternewproduct");
		mav.addObject("product", product);
		
		return mav;
	}
	
	@RequestMapping("xconfirmproduct")
	public ModelAndView confirmProductHandler(@ModelAttribute() Product product) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("products/confirmproduct");
		mav.addObject("product", product);
		
		
		return mav;
	}
	
	@RequestMapping("xsaveproduct")
	public ModelAndView saveProductHandler(@ModelAttribute() Product product) {
		ModelAndView mav = new ModelAndView();
		int result = ProductServices.addProduct(product);
		
		if (result == 1) {
			mav.setViewName("products/productsave");
		} else {
			mav.setViewName("products/error");
		}
		
		return mav;
	}

}
